CBMC version 5.11 (cbmc-5.11-dirty) 64-bit x86_64 linux
Reading GOTO program from file
Reading: main.c.i
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER__start /* __CPROVER__start */
        // 26 no location
        __CPROVER_initialize();
        // 27 no location
        main();
        // 28 no location
        return' = main#return_value;
        // 29 no location
        dead main#return_value;
        // 30 no location
        OUTPUT("return", return');
        // 31 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER_initialize /* __CPROVER_initialize */
        // 24 no location
        a = { 0 };
        // 25 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

assert /* assert */
        // 0 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

f /* f */
        // 1 file main.c line 1 column 11
        int i.addr;
        // 2 
        i.addr = i;
        // 3 no location
        int add;
        // 4 file main.c line 3 column 10
        add = i.addr + 1;
        // 5 file main.c line 3 column 2
        f#return_value = add;
        // 6 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

llvm.dbg.declare /* llvm.dbg.declare */
        // 32 no location
        END_FUNCTION

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

main /* main */
        // 7 file main.c line 11 column 6
        int y;
        // 8 file main.c line 11 column 6
        y = 10;
        // 9 file main.c line 13 column 7
        a[0l] = y;
        // 10 no location
        int call;
        // 11 no location
        f(a[0l]);
        // 12 no location
        call = f#return_value;
        // 13 no location
        dead f#return_value;
        // 14 file main.c line 14 column 7
        a[0l] = call;
        // 15 no location
        int add;
        // 16 file main.c line 16 column 18
        add = y + 1;
        // 17 no location
        __CPROVER_bool cmp;
        // 18 file main.c line 16 column 14
        cmp = a[0l] == add;
        // 19 file main.c line 16 column 14
        unsigned int conv;
        // 20 file main.c line 16 column 14
        conv = (unsigned int)cmp;
        // 21 file main.c line 16 column 2
        ASSERT (__CPROVER_bool)conv
        // 22 file main.c line 17 column 1
        main#return_value = 0;
        // 23 no location
        END_FUNCTION

